import requests
import csv
import urllib.parse
from typing import List, Dict
import time
from datetime import datetime

def search_company(keyword: str) -> List[Dict]:
    """
    ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏à‡∏≤‡∏Å API
    
    Args:
        keyword: ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    
    Returns:
        List ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏µ‡πà‡∏û‡∏ö
    """
    base_url = "https://ecqyzf1qgi.execute-api.ap-southeast-1.amazonaws.com/prod/rdcontact"
    
    # Encode keyword ‡πÄ‡∏õ‡πá‡∏ô URL format
    encoded_keyword = urllib.parse.quote(keyword)
    url = f"{base_url}?ocr=false&keyword={encoded_keyword}"
    
    try:
        response = requests.get(url, timeout=30)
        response.raise_for_status()
        data = response.json()
        
        if data.get('status') and data.get('data', {}).get('list'):
            results = data['data']['list']
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° keyword ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ result
            for result in results:
                result['search_keyword'] = keyword
            return results
        else:
            print(f"  ‚ö† ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: {keyword}")
            return []
    except Exception as e:
        print(f"  ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ '{keyword}': {str(e)}")
        return []

def save_to_csv(all_results: List[Dict], output_file: str = 'companies_result.csv'):
    """
    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á CSV file
    
    Args:
        all_results: List ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        output_file: ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    """
    if not all_results:
        print("\n‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
        return
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î fieldnames ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏° search_keyword
    fieldnames = ['search_keyword', 'taxId', 'name', 'branch', 'branchCode', 
                  'branchType', 'addressLocal', 'zipCode', 'contactGroup']
    
    with open(output_file, 'w', newline='', encoding='utf-8-sig') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames, extrasaction='ignore')
        writer.writeheader()
        writer.writerows(all_results)
    
    print(f"\n{'='*60}")
    print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: {output_file}")
    print(f"üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(all_results)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"{'='*60}")

def read_company_list(file_path: str) -> List[str]:
    """
    ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
    
    Args:
        file_path: path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
    
    Returns:
        List ‡∏Ç‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
    """
    companies = []
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            for line in f:
                company = line.strip()
                # ‡∏Ç‡πâ‡∏≤‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏Ñ‡πà quotes
                if company and company not in ['""', '"']:
                    companies.append(company)
        return companies
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {str(e)}")
        return []

def main():
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó
    """
    # ‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
    input_file = '/Users/sathitseethaphon/projects/dms-invs-projects/invs-modern/scripts/company.txt'
    
    print("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó...")
    company_names = read_company_list(input_file)
    
    if not company_names:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå")
        return
    
    print(f"‚úÖ ‡∏û‡∏ö‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(company_names)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"\n{'='*60}")
    print(f"‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... (‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {datetime.now().strftime('%H:%M:%S')})")
    print(f"{'='*60}\n")
    
    all_results = []
    success_count = 0
    not_found_count = 0
    error_count = 0
    
    for idx, company_name in enumerate(company_names, 1):
        print(f"[{idx}/{len(company_names)}] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {company_name}")
        results = search_company(company_name)
        
        if results:
            print(f"  ‚úÖ ‡∏û‡∏ö {len(results)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            all_results.extend(results)
            success_count += 1
        elif results == []:
            not_found_count += 1
        else:
            error_count += 1
        
        # ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ API ‡∏ñ‡∏π‡∏Å rate limit
        time.sleep(0.3)
        
        # ‡πÅ‡∏™‡∏î‡∏á progress ‡∏ó‡∏∏‡∏Å‡πÜ 50 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        if idx % 50 == 0:
            print(f"\nüìä Progress: {idx}/{len(company_names)} ({idx*100//len(company_names)}%)")
            print(f"   ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {success_count} | ‚ö† ‡πÑ‡∏°‡πà‡∏û‡∏ö: {not_found_count} | ‚ùå Error: {error_count}\n")
    
    print(f"\n{'='*60}")
    print(f"üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤! (‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: {datetime.now().strftime('%H:%M:%S')})")
    print(f"{'='*60}")
    print(f"üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:")
    print(f"   ‚Ä¢ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(company_names)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   ‚Ä¢ ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {success_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   ‚Ä¢ ‚ö† ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {not_found_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   ‚Ä¢ ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   ‚Ä¢ üì¶ ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: {len(all_results)} records")
    print(f"{'='*60}")
    
    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô CSV
    if all_results:
        output_file = '/Users/sathitseethaphon/projects/dms-invs-projects/invs-modern/scripts/companies_result.csv'
        save_to_csv(all_results, output_file)
    else:
        print("\n‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")

if __name__ == "__main__":
    main()
